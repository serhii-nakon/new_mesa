FROM --platform=linux/386 debian:bookworm

# Install needle dependencies
RUN apt update
RUN apt full-upgrade -y
RUN apt -y install apt-utils lsb-release gnupg2 sudo git python3 python3-setuptools python3-distutils python3-mako python3-pip wget \
    mesa-utils vulkan-tools gcc g++ pkg-config ninja-build gettext valgrind bison flex dpkg-dev glslang-tools \
    libc6-dev libomxil-bellagio-dev xutils-dev libvdpau-dev libvulkan-dev libxv-dev libva-dev zlib1g-dev \
    libzstd-dev libexpat1-dev libelf-dev libglvnd-dev libunwind-dev wayland-protocols libwayland-dev \
    libwayland-egl-backend-dev libx11-dev libxext-dev libxfixes-dev libxcb-glx0-dev libxcb-shm0-dev \
    libxcb1-dev libx11-xcb-dev libxcb-dri2-0-dev libxcb-dri3-dev libxcb-present-dev libxcb-sync-dev \
    libxcb-keysyms1-dev libxshmfence-dev x11proto-dev libxxf86vm-dev libxcb-xfixes0-dev libxcb-randr0-dev \
    libxrandr-dev libxcb-sync-dev libsensors-dev libx11-dev libudev-dev libpciaccess-dev libcairo-dev \
    wayland-protocols libwayland-bin directx-headers-dev

# Install LLVM related packages
RUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -
RUN echo 'deb http://apt.llvm.org/bookworm/ llvm-toolchain-bookworm-20 main' | tee /etc/apt/sources.list.d/llvm.list
RUN apt update
RUN apt install -y libllvm20 llvm-20-dev libclang-20-dev libclang-cpp20-dev

# Create regular user
RUN useradd -m jenkins
RUN echo 'jenkins ALL=(ALL) NOPASSWD:ALL' | tee /etc/sudoers.d/nopassword

USER jenkins
WORKDIR /home/jenkins

# Need newer meson than exist in Debian repository
RUN pip3 install --break-system-packages meson
ENV PATH /home/jenkins/.local/bin:${PATH}
RUN meson --version

# Create dirictory to install binaries
RUN sudo mkdir /opt/mesa32
RUN sudo chmod -Rv o+rw,g+rw /opt/mesa32

# Clone Mesa and libdrm
RUN git clone --depth=1 --branch=libdrm-2.4.124 --single-branch https://gitlab.freedesktop.org/mesa/drm.git
RUN git clone --depth=1 --branch=mesa-25.1.0 --single-branch https://gitlab.freedesktop.org/mesa/mesa.git

# Build and install libdrm
WORKDIR /home/jenkins/drm
RUN meson setup builddir/ \
    --prefix=/opt/mesa32 \
    --buildtype=release \
    -Db_ndebug=true \
    -Dvalgrind=enabled
RUN ninja -C builddir/
RUN ninja -C builddir/ install

ENV PKG_CONFIG_PATH=/opt/mesa32/lib/i386-linux-gnu/pkgconfig

# Build and install Mesa
WORKDIR /home/jenkins/mesa
RUN meson setup builddir/ \
    --prefix=/opt/mesa32 \
    -Dplatforms=x11,wayland \
    -Dgallium-extra-hud=true \
    -Dvulkan-drivers=amd,swrast,virtio \
    -Dgallium-drivers=radeonsi,zink,virgl,llvmpipe \
    -Dshader-cache=enabled \
    -Dvulkan-layers=device-select,overlay \
    -Dopengl=true \
    -Dgles1=enabled \
    -Dgles2=enabled \
    -Degl=enabled \
    -Dllvm=enabled \
    -Dlmsensors=enabled \
    -Dtools=glsl,nir \
    -Dgallium-vdpau=enabled \
    -Dgallium-va=enabled \
    -Dglvnd=enabled \
    -Dgbm=enabled \
    -Dlibunwind=enabled \
    -Dvideo-codecs=vc1dec,h264dec,h264enc,h265dec,h265enc,av1dec,av1enc,vp9dec \
    --buildtype=release \
    -Db_ndebug=true \
    -Dvalgrind=enabled
RUN ninja -C builddir/
RUN ninja -C builddir/ install

# Copy libLLVM to able use it on host without additional installing
WORKDIR /opt/mesa32/lib/i386-linux-gnu
RUN cp -v /usr/lib/llvm-20/lib/libLLVM.so.1 libLLVM.so.1
RUN ln -s libLLVM.so.1 libLLVM.so
RUN ln -s libLLVM.so.1 libLLVM.so.20.0
RUN ln -s libLLVM.so.1 libLLVM.so.20.1
RUN ln -s libLLVM.so.1 libLLVM-20.so.1
RUN ln -s libLLVM.so.1 libLLVM-20.so
WORKDIR /home/jenkins

RUN mkdir /home/jenkins/out

# Set proper groups to test inside container
# RUN sudo groupadd -g 106 render
# RUN sudo usermod -a -G sasl root
# RUN sudo usermod -a -G render root
# RUN sudo usermod -a -G render jenkins
# RUN sudo usermod -a -G sasl jenkins

# Copy to host
# ENTRYPOINT [ "tail", "-f", "/dev/null" ]
ENTRYPOINT [ "cp", "-vr", "/opt/mesa32", "/home/jenkins/out" ]
# ENTRYPOINT [ "ls", "-al", "/opt/mesa32/lib" ]
